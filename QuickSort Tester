package SearchEngine;

import java.util.HashMap;
import java.util.Random;
import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;

/**
 * This is a main tester for the quick sort
 * In this class, we use quick sort to sort
 * each of the URLs by their factor scores
 * and print them out in order
 * @author Yoyo
 *
 */
public class QuickSortTester {
	public static void main (String[] args)
	{
		Scanner in = new Scanner(System.in);
		Random rand = new Random();
		HashMap<Integer, String> gotUrls = new HashMap<Integer, String>();
		spider spider = new spider();
		QuickSortFunc sort = new QuickSortFunc();
		
		int[] scoresOfUrls = new int[30];
		
		int sumOfScores = 0;
		int index1 = 0;
		int index2 = 1;
		int index3 = 1;
		
		
		// Get user inputs about the search word, and
		// the factor scores
		System.out.print("Enter a word you want to search: ");
		String userInputWord = in.nextLine();
		
		System.out.print("Enter a score for the first factor: ");
		int firstScore = in.nextInt();
		
		System.out.print("Enter a score for the second factor: ");
		int secondScore = in.nextInt();
		
		System.out.print("Enter a score for the third factor: ");
		int thirdScore = in.nextInt();
		
		System.out.print("Enter a score for the fourth factor: ");
		int fourthScore = in.nextInt();
		
		sumOfScores = firstScore + secondScore + thirdScore + fourthScore;
		
		spider.search("https://www.nytimes.com/" , userInputWord);
        
		// Put the Urls and the value into a hashmap
		// Store the scores into an array
		for (String urls:spider.getUrls())
		{
			int tempScores = rand.nextInt(1000 + sumOfScores);
			scoresOfUrls[index1] = tempScores;
			gotUrls.put(tempScores, urls);
			index1++;
		}

		// Sort the scores
		sort.quickSort(scoresOfUrls, 0, scoresOfUrls.length - 1);
		
		// Get the urls from the sorted scores and print all 30
		// in order of their scores with index 1-30
		System.out.println("************** 30 sorted URLs with Index starting at 1 and Scores *************");
		for(int scores:scoresOfUrls)
		{
			System.out.println(index3 + ". " + gotUrls.get(scores) + ": [PageRank Scores]: " + scores);
			index3++;
		}
		
		System.out.println("************** 30 URLs with Index starting at 1 and Scores *************");
		for(int scores:gotUrls.keySet())
		{
			System.out.print(index2 + ". ");
			String url = gotUrls.get(scores);
			System.out.println(url + ": [Scores]: " + scores);
			index2++;
		}
	}
}
